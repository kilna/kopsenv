#!/usr/bin/env bash
# Summary: Show the current Kops version
set -e

[ -n "${KOPSENV_DEBUG}" ] && set -x
source ${KOPSENV_ROOT}/libexec/helpers

[ -d "${KOPSENV_CONF_DIR}/versions" ] \
  || error_and_die "No versions of kops installed. Please install one with: kopsenv install"

KOPSENV_VERSION_FILE="$(kopsenv-version-file)"
KOPSENV_VERSION="$(cat "${KOPSENV_VERSION_FILE}" || true)"

if [[ "${KOPSENV_VERSION}" =~ ^latest.*$ ]]; then
  [[ "${KOPSENV_VERSION}" =~ ^latest\:.*$ ]] && regex="${KOPSENV_VERSION##*\:}"
  version="$(\ls "${KOPSENV_CONF_DIR}/versions" \
    | sort -t'.' -k 1nr,1 -k 2nr,2 -k 3nr,3 \
    | grep -e "${regex}" \
    | head -n 1
  )"
  [ -n "${version}" ] || error_and_die "No installed versions of kops matched '${KOPSENV_VERSION}'"
  KOPSENV_VERSION="${version}"
fi

[ -z "${KOPSENV_VERSION}" ] \
  && error_and_die "Version could not be resolved (set by ${KOPSENV_VERSION_FILE} or kopsenv use <version>)"

version_exists() {
  local version="${1}"
  [ -d "${KOPSENV_CONF_DIR}/versions/${version}" ]
}

if version_exists "${KOPSENV_VERSION}"; then
  echo "${KOPSENV_VERSION}"
else
  error_and_die "version \`${KOPSENV_VERSION}' is not installed (set by ${KOPSENV_VERSION_FILE})"
fi
