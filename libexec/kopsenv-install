#!/usr/bin/env bash

[ -n "${KOPSENV_DEBUG}" ] && set -x
source ${KOPSENV_ROOT}/libexec/helpers

[ "${#}" -gt 1 ] && error_and_die "usage: kopsenv install [<version>]"

declare version_requested version regex

if [ -z "${1}" ]; then
  version_file="$(kopsenv-version-file)"
  if [ "${version_file}" != "${KOPSENV_CONF_DIR}/version" ]; then
    version_requested="$(cat ${version_file} || true)"
  fi
else
  version_requested="${1}"
fi

if [[ "${version_requested}" =~ ^latest\:.*$ ]]; then
  version="${version_requested%%\:*}"
  regex="${version_requested##*\:}"
elif [[ "${version_requested}" =~ ^latest$ ]]; then
  version="${version_requested}"
  regex=""
else
  version="${version_requested}"
  regex="^${version_requested}$"
fi

[ -n "${version}" ] || error_and_die "Version is not specified"
version="$(kopsenv-list-remote | grep -e "${regex}" | head -n 1)"
[ -n "${version}" ] || error_and_die "No versions matching '${1}' found in remote"

dst_path="${KOPSENV_CONF_DIR}/versions/${version}"
if [ -f "${dst_path}/kops" ]; then
  echo "Kops ${version} is already installed"
  exit 0
fi

version_url="https://github.com/kubernetes/kops/releases/download/${version}"
exe_name="kops-$(kops_platform)"
(( "$?" )) && exit $?

info "Installing Kops ${version}"

# Create a local temporary directory for downloads
download_tmp="$(mktemp -d kopsenv_download.XXXXXX)" || error_and_die "Unable to create temporary download directory in $(pwd)"
# Clean it up in case of error
trap "rm -rf ${download_tmp}" EXIT;

info "Downloading release from ${version_url}/${exe_name}"
curlw -# -f -L -o "${download_tmp}/${exe_name}" "${version_url}/${exe_name}" || error_and_die "Download failed"

mkdir -p "${dst_path}" || error_and_die "Failed to make directory ${dst_path}"
cp "${download_tmp}/${exe_name}" "${dst_path}/kops" || error_and_die "Copy of ${exe_name} from ${download_tmp} to ${dst_path} failed"
chmod a+x "${dst_path}/kops" || error_and_die "Unable to set execute on ${dst_path}/kops"

info "Installation of kops ${version} successful"
kopsenv-use "$version"

